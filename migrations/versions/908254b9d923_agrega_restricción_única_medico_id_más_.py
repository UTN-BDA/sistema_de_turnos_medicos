"""Agrega restricción única medico_id más fecha_hora en turnos.

Revision ID: 908254b9d923
Revises: 4052300e1224
Create Date: 2025-06-11 12:12:38.522440

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '908254b9d923'
down_revision = '4052300e1224'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notificaciones', schema=None) as batch_op:
        batch_op.alter_column('fecha_envio',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('turno_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('estado',
               existing_type=postgresql.ENUM('NO_LEIDA', 'LEIDA', name='estadonotificacion'),
               nullable=False)

    with op.batch_alter_table('turnos', schema=None) as batch_op:
        batch_op.alter_column('estado',
               existing_type=postgresql.ENUM('PROGRAMADO', 'CANCELADO', 'REPROGRAMADO', 'ATENDIDO', 'PERDIDO', name='estadoturno'),
               nullable=False)
        batch_op.alter_column('reprogramaciones',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('paciente_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('medico_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('administrativo_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint('uq_medico_fecha', ['medico_id', 'fecha_hora'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('turnos', schema=None) as batch_op:
        batch_op.drop_constraint('uq_medico_fecha', type_='unique')
        batch_op.alter_column('administrativo_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('medico_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('paciente_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('reprogramaciones',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('estado',
               existing_type=postgresql.ENUM('PROGRAMADO', 'CANCELADO', 'REPROGRAMADO', 'ATENDIDO', 'PERDIDO', name='estadoturno'),
               nullable=True)

    with op.batch_alter_table('notificaciones', schema=None) as batch_op:
        batch_op.alter_column('estado',
               existing_type=postgresql.ENUM('NO_LEIDA', 'LEIDA', name='estadonotificacion'),
               nullable=True)
        batch_op.alter_column('turno_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('fecha_envio',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    # ### end Alembic commands ###
